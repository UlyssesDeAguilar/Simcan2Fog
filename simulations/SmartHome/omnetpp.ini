[General]
## TEMPORAL
print-undisposed=true

## Time resolution
sim-time-limit = 1h
simtime-resolution = ps

## Comand line environment
cmdenv-express-mode = false
cmdenv-performance-display=false
cmdenv-event-banners=false
#ned-path = ../../src;../;

## Network
network = SmartHome

## Log
**.cloudProvider.cmdenv-log-level = off
**.userGenerator.cmdenv-log-level = error
**.dcManager.cmdenv-log-level = error
**.cmdenv-log-level = off	## off, error, info, debug and trace
cmdenv-log-prefix = "(%t):[%l] %m  "

## Allow to examine details of recorded history of a simulation, focusing on the behavior instead of the statistical results.
#record-eventlog = false
#**.module-eventlog-recording = false
eventlog-message-detail-pattern = *:userID,strVmId,isResponse,operation,result

## Recording of simulation results - recordScalar() - recordStatistic()
#**.statistic-recording = false  ## from a @statistic in ned file
#**.scalar-recording = false ## scalar or a statistic object (cStdDev to record summary statistics)
#**.vector-recording = false ## output vector (recorded using cOutVector objects)
#**.bin-recording = false ##  bins of a histogram object (cHistogram, cPSquare, cKSplit)

## Random seeds fix
seed-set = 0
num-rngs = 1
seed-0-mt = 0

# network = INETComm

# SimSchema settings
*.simData.simSchema.typename = "SimSchemaMySQL"
*.simData.simSchema.hostName = "tcp://127.0.0.1:3306"

# Experiment settings
*.simData.manager.experiment = "Test"

# Routing settings
#**.arp.typename = "GlobalArp"
#**.netmaskRoutes = ""
**.arp.typename = "GlobalArp"
**.routingTable.netmaskRoutes = ""

# access point

*.radioMedium.backgroundNoise.power = -110dBm
*.configurator.config = xmldoc("startopology.xml")
#*.configurator.config = xmldoc("topo.xml")
#*.configurator.addStaticRoutes = false

# Controller preloading app
*.controller*.hy.apps = "SmartHomeApp"
*.controller*.ns.enableQueue = false
*.controller*.ns.numWlanInterfaces = 1

#*.controller*.ns.energyStorage.typename = "IdealEpEnergyStorage"
#*.controller*.ns.wlan[*].typename = "Ieee802154NarrowbandInterface"
#*.controller*.ns.wlan[*].radio.energyConsumer.typename = "SensorStateBasedEpEnergyConsumer"

# Sensor settings
*.sensor*.model.controllerInterface = "wlan0"
*.sensor*.numWlanInterfaces = 1
#*.sensor*.energyStorage.typename = "IdealEpEnergyStorage"
#*.sensor*.wlan[*].typename = "Ieee802154NarrowbandInterface"
#*.sensor*.wlan[*].radio.energyConsumer.typename = "SensorStateBasedEpEnergyConsumer"

# Actuator settings
*.lamp*.numApps = 1
*.lamp*.numWlanInterfaces = 1
*.lamp*.app[0].typename = "UdpSink"
*.lamp*.app[0].localPort = 1000

## Visualization
# routing table visualization
*.visualizer.*.*.nodeFilter = "sensor* or lamp*"
*.visualizer.*.routingTableVisualizer[0].displayRoutingTables = false
*.visualizer.*.routingTableVisualizer[0].displayRoutesIndividually = false
*.visualizer.*.routingTableVisualizer[0].lineShift = 0
*.visualizer.*.routingTableVisualizer[0].displayLabels = false

# interface table visualization
*.visualizer.*.interfaceTableVisualizer[0].displayInterfaceTables = false

# data link visualization
*.visualizer.*.numDataLinkVisualizers = 2
*.visualizer.*.dataLinkVisualizer[*].displayLinks = true
*.visualizer.*.dataLinkVisualizer[0].nodeFilter = "sensor* or controller"
*.visualizer.*.dataLinkVisualizer[1].*Color = "blue"
*.visualizer.*.dataLinkVisualizer[1].nodeFilter = "lamp* or controller"

# statistic visualization
*.visualizer.*.numStatisticVisualizers = 2
*.visualizer.*.statisticVisualizer[*].zIndex = 1

*.visualizer.*.statisticVisualizer[0].displayStatistics = true
*.visualizer.*.statisticVisualizer[0].signalName = "packetSent"
*.visualizer.*.statisticVisualizer[0].statisticExpression = "count"
*.visualizer.*.statisticVisualizer[0].sourceFilter = "**.controller.udp **.sensor*.udp"
*.visualizer.*.statisticVisualizer[0].format = "sent: %v pks"

*.visualizer.*.statisticVisualizer[1].displayStatistics = true
*.visualizer.*.statisticVisualizer[1].signalName = "packetReceived"
*.visualizer.*.statisticVisualizer[1].statisticExpression = "count"
*.visualizer.*.statisticVisualizer[1].sourceFilter = "**.controller.udp **.lamp*.udp"
*.visualizer.*.statisticVisualizer[1].format = "rcvd: %v pks"
